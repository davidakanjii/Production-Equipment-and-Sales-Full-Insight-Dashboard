<html><style>body {
color: #000000;
background-color: #FFFFFF;
font-size: 24;
font-family: Serif;
font-weight: bold;
font-style: italic;
}
h1, h2, h3, h4, h5, h6 {
color: #000000;
background-color: #FFFFFF;
font-size: 24;
font-family: Serif;
font-weight: bold;
font-style: italic;
}
table, pre {
color: #000000;
background-color: #FFFFFF;
font-size: 16;
font-family: Serif;
font-weight: normal;
font-style: normal;
}

ul, #myUL {
  list-style-type: none;
}

#myUL {
  margin: 0;
  padding: 0;
}

.caret, .dropDownCaret {
  cursor: pointer;
}

.caret::before {
	content: "\25B6";
	color: black;
	display: inline - block;
	margin - right: 6px;
}

.dropDownCaret::before {
	content: "\25BC";
	color: black;
	display: inline - block;
	margin - right: 6px;
	float: right;
}


.nested {
  display: none;
}

.active {
  display: block;
}
</style><body><br></br><h1><div>Power BI Documentation</div></h1><br></br><hr></hr><h2><div>Generated by <a href="http://radacad.com/power-bi-helper">Power BI Helper</a> (Copyright &copy; <a href="http://radacad.com">RADACAD</a>).</div><br></br><div>Date: 4/24/2023 2:34:29 AM</div><br></br></h2><h1><div>------------------******   Visualization    ******---------------------</div></h1><br></br><h2><div>File: Challenge 18.pbix</div></h2><br></br><h3><div>Path: D:\PP\Dataproanalytic\Learning Content\My Past Power BI Training Project\Challenge 18.pbix</div></h2><br></br><hr></hr><br></br><h3><div>List of Pages:</div></h3><br></br><table border='1px' cellpadding='1'><tr ><td >DisplayName</td><td >Name</td><td >Ordinal</td><td >DisplayOption</td><td >Width</td><td >Height</td><td >PageIndex</td></tr><tr ><td >Report Page</td><td >ReportSection02c2af75067ad78068b2</td><td >0</td><td >1</td><td >1280</td><td >720</td><td >0</td></tr><tr ><td >Main Menu</td><td >ReportSectionc61443ac188526d463c0</td><td >1</td><td >1</td><td >1280</td><td >720</td><td >1</td></tr><tr ><td >Tooltips</td><td >ReportSectiondcfa2d7270764cbde382</td><td >2</td><td >1</td><td >500</td><td >350</td><td >2</td></tr></table><hr></hr><br></br><h3><div>Visuals in Report Page:</div></h3><table border='1px' cellpadding='1'><tr ><td >Visual Type</td><td >Title</td><td >X</td><td >Y</td><td >Z</td><td >Width</td><td >Height</td><td >Name</td><td >tabOrder</td><td >VisualIndex</td><td >PageIndex</td></tr><tr ><td >payPalKPIDonutChart55A431AB15A540ED924ACD72ED8D259F</td><td ></td><td >427.892720306513</td><td >186.360153256705</td><td >12000</td><td >213.333333333333</td><td >160.613026819923</td><td >677bd85e0263ecdac3d1</td><td ></td><td >0</td><td >0</td></tr><tr ><td >payPalKPIDonutChart55A431AB15A540ED924ACD72ED8D259F</td><td ></td><td >159.386973180077</td><td >187.586206896552</td><td >13000</td><td >220.689655172414</td><td >160.613026819923</td><td >a5f134a007bcc116e045</td><td >1000</td><td >1</td><td >0</td></tr><tr ><td >payPalKPIDonutChart55A431AB15A540ED924ACD72ED8D259F</td><td ></td><td >731.463571599617</td><td >189.547900203544</td><td >14000</td><td >202.298850574713</td><td >159.386973180077</td><td >1a91f934303873228eba</td><td >2000</td><td >2</td><td >0</td></tr><tr ><td >payPalKPIDonutChart55A431AB15A540ED924ACD72ED8D259F</td><td ></td><td >1017.6245210728</td><td >186.360153256705</td><td >15000</td><td >212.107279693487</td><td >172.873563218391</td><td >745c8ec8454001528ec4</td><td >3000</td><td >3</td><td >0</td></tr><tr ><td >lineChart</td><td ></td><td >851.607684529828</td><td >438.746208291203</td><td >16000</td><td >379.211324570273</td><td >256.258847320526</td><td >772e66b6ad08b7e50017</td><td >4000</td><td >4</td><td >0</td></tr><tr ><td >sparklines50DB3783432B40A69C0B91926CE74CD9</td><td ></td><td >151.959798994975</td><td >438.994974874372</td><td >17000</td><td >640.402010050251</td><td >264.120603015075</td><td >2485169951e020c3a017</td><td >5000</td><td >5</td><td >0</td></tr><tr ><td >card</td><td ></td><td >445</td><td >70</td><td >18000</td><td >92.5</td><td >38.75</td><td >0fabb467685253796084</td><td >6000</td><td >6</td><td >0</td></tr><tr ><td >card</td><td ></td><td >621.25</td><td >68.75</td><td >19000</td><td >101.25</td><td >43.75</td><td >2be2e63640c0e516037e</td><td >7000</td><td >7</td><td >0</td></tr><tr ><td >card</td><td ></td><td >818.75</td><td >67.5</td><td >20000</td><td >86.25</td><td >40</td><td >0cd008005b63500d22ea</td><td >8000</td><td >8</td><td >0</td></tr><tr ><td >card</td><td ></td><td >983.75</td><td >63.75</td><td >21000</td><td >83.75</td><td >46.25</td><td >acf9e21cdb5d1e0a8721</td><td >9000</td><td >9</td><td >0</td></tr><tr ><td >card</td><td ></td><td >1152.5</td><td >67.5</td><td >22000</td><td >98.75</td><td >43.75</td><td >75d128c60e3457de2cc2</td><td >10000</td><td >10</td><td >0</td></tr><tr ><td >shape</td><td ></td><td >126.732673267327</td><td >15.8415841584158</td><td >7000</td><td >253.465346534653</td><td >110.891089108911</td><td >dbe62145dde64a8c1e81</td><td >11000</td><td >11</td><td >0</td></tr><tr ><td >shape</td><td ></td><td >381.302681992337</td><td >15.9386973180077</td><td >0</td><td >174.099616858238</td><td >110.344827586207</td><td >af10a2c00a24b3e8b94b</td><td >12000</td><td >12</td><td >0</td></tr><tr ><td >shape</td><td ></td><td >566.436781609195</td><td >15.9386973180077</td><td >8000</td><td >172.873563218391</td><td >110.344827586207</td><td >f443b3930c93d92500e3</td><td >13000</td><td >13</td><td >0</td></tr><tr ><td >shape</td><td ></td><td >749.11877394636</td><td >15.9386973180077</td><td >9000</td><td >160.613026819923</td><td >110.344827586207</td><td >adeee8ddd64a0c6aed8b</td><td >14000</td><td >14</td><td >0</td></tr><tr ><td >shape</td><td ></td><td >921.992337164751</td><td >15.9386973180077</td><td >10000</td><td >165.51724137931</td><td >110.344827586207</td><td >3a07e3d72aab1e1e69b5</td><td >15000</td><td >15</td><td >0</td></tr><tr ><td >shape</td><td ></td><td >1100.99616858238</td><td >15.9386973180077</td><td >11000</td><td >161.83908045977</td><td >110.344827586207</td><td >2e1decf8414721cb4170</td><td >16000</td><td >16</td><td >0</td></tr><tr ><td ></td><td ></td><td >137.318007662835</td><td >129.961685823755</td><td >3000</td><td >264.827586206897</td><td >242.758620689655</td><td >1d29cdf8406ab4c3b523</td><td >17000</td><td >17</td><td >0</td></tr><tr ><td >shape</td><td >'fffff'</td><td >4.90421455938697</td><td >1.22605363984674</td><td >1000</td><td >255.019157088123</td><td >57.6245210727969</td><td >38c97b05871007c2a930</td><td ></td><td >18</td><td >0</td></tr><tr ><td >shape</td><td >'fffff'</td><td >0</td><td >0</td><td >0</td><td >264.827586206897</td><td >242.758620689655</td><td >40fe5b0eab7450301590</td><td >1000</td><td >19</td><td >0</td></tr><tr ><td ></td><td ></td><td >402.145593869732</td><td >131.187739463602</td><td >4000</td><td >264.827586206897</td><td >243.984674329502</td><td >0ed4ad0d04c4a85062d0</td><td >18000</td><td >20</td><td >0</td></tr><tr ><td >shape</td><td >'fffff'</td><td >3.67816091954023</td><td >0</td><td >1000</td><td >255.019157088123</td><td >57.6245210727969</td><td >6dfe75156ed7ede6909c</td><td ></td><td >21</td><td >0</td></tr><tr ><td >shape</td><td >'fffff'</td><td >0</td><td >1.22605363984673</td><td >0</td><td >264.827586206897</td><td >242.758620689655</td><td >216b400a485300b3db44</td><td >1000</td><td >22</td><td >0</td></tr><tr ><td ></td><td ></td><td >697.134069683908</td><td >134.375486410441</td><td >5000</td><td >264.827586206897</td><td >243.984674329502</td><td >5f50a00e042ca081b790</td><td >19000</td><td >23</td><td >0</td></tr><tr ><td >shape</td><td >'fffff'</td><td >6.13026819923372</td><td >0</td><td >1000</td><td >255.019157088123</td><td >57.6245210727969</td><td >35eac67290005407b377</td><td ></td><td >24</td><td >0</td></tr><tr ><td >shape</td><td >'fffff'</td><td >0</td><td >1.22605363984673</td><td >0</td><td >264.827586206897</td><td >242.758620689655</td><td >3bd11a0b450ca0971469</td><td >1000</td><td >25</td><td >0</td></tr><tr ><td ></td><td ></td><td >987.006062741299</td><td >129.961685823755</td><td >6000</td><td >264.827586206897</td><td >247.709810484285</td><td >9279848580d009ea3965</td><td >20000</td><td >26</td><td >0</td></tr><tr ><td >shape</td><td >'fffff'</td><td >9.77554645410365</td><td >0</td><td >1000</td><td >255.019157088123</td><td >57.6245210727969</td><td >c8961c76dd00bd940cb6</td><td ></td><td >27</td><td >0</td></tr><tr ><td >shape</td><td >'fffff'</td><td >0</td><td >1.27302887508993</td><td >0</td><td >264.827586206897</td><td >246.436781609195</td><td >64a40333ba100b5adc00</td><td >1000</td><td >28</td><td >0</td></tr><tr ><td ></td><td ></td><td >129.961685823755</td><td >382.528735632184</td><td >2000</td><td >682.911877394636</td><td >337.164750957854</td><td >7824c8e0b653e9a97ad4</td><td >21000</td><td >29</td><td >0</td></tr><tr ><td >shape</td><td >'fffff'</td><td >0</td><td >1.09943884750693</td><td >1000</td><td >683.336478656958</td><td >57.8348295438655</td><td >433445039d3692ba5860</td><td ></td><td >30</td><td >0</td></tr><tr ><td >shape</td><td >'fffff'</td><td >0.801452377524758</td><td >0</td><td >0</td><td >683.336478656958</td><td >337.164750957854</td><td >d63b6ac15ee053255992</td><td >1000</td><td >31</td><td >0</td></tr><tr ><td ></td><td ></td><td >830.038314176245</td><td >384.980842911877</td><td >1000</td><td >427.892720306513</td><td >334.712643678161</td><td >24bc9bb00485b6060209</td><td >22000</td><td >32</td><td >0</td></tr><tr ><td >shape</td><td >'fffff'</td><td >1.75340721354436</td><td >0</td><td >1000</td><td >422.423303714573</td><td >55.20650721247</td><td >2aaee5440b06465599ea</td><td ></td><td >33</td><td >0</td></tr><tr ><td >shape</td><td >'fffff'</td><td >0</td><td >1.28717020700296</td><td >0</td><td >427.892720306513</td><td >333.425473471158</td><td >e8560f4429b58b560be3</td><td >1000</td><td >34</td><td >0</td></tr><tr ><td >shape</td><td >'fffff'</td><td >386.976744186047</td><td >18.1193124368049</td><td >23000</td><td >169.544994944388</td><td >45.2982810920121</td><td >5892b6805a481a3424b0</td><td >23000</td><td >35</td><td >0</td></tr><tr ><td >shape</td><td >'fffff'</td><td >570.758341759353</td><td >18.1193124368049</td><td >24000</td><td >169.544994944388</td><td >45.2982810920121</td><td >fb7a06c29b18233c50b5</td><td >24000</td><td >36</td><td >0</td></tr><tr ><td >shape</td><td >'fffff'</td><td >753.24570273003</td><td >15.530839231547</td><td >25000</td><td >155.30839231547</td><td >45.2982810920121</td><td >a8251644b8248505543b</td><td >25000</td><td >37</td><td >0</td></tr><tr ><td >shape</td><td >'fffff'</td><td >921.49646107179</td><td >16.8250758341759</td><td >26000</td><td >165.662285136502</td><td >45.2982810920121</td><td >f94e709a6547d050536c</td><td >26000</td><td >38</td><td >0</td></tr><tr ><td >shape</td><td >'fffff'</td><td >1101.39534883721</td><td >16.8250758341759</td><td >28000</td><td >161.779575328615</td><td >45.2982810920121</td><td >fa34da41b74a05399772</td><td >27000</td><td >39</td><td >0</td></tr><tr ><td ></td><td ></td><td >7.76541961577351</td><td >150.131445904954</td><td >27000</td><td >411.796250157189</td><td >544.292688401324</td><td >5b896127b616dc0d3a3e</td><td >28000</td><td >40</td><td >0</td></tr><tr ><td >shape</td><td ></td><td >181.083414942193</td><td >0</td><td >0</td><td >230.712835214996</td><td >544.292688401324</td><td >02c2e7cd39777cb29d2c</td><td ></td><td >41</td><td >0</td></tr><tr ><td >shape</td><td ></td><td >191.114407777627</td><td >15.5142809045508</td><td >1000</td><td >208.143101335268</td><td >506.799842881993</td><td >b3ba46f07a00ce4198cc</td><td >1000</td><td >42</td><td >0</td></tr><tr ><td >shape</td><td ></td><td >0</td><td >49.1809908998989</td><td >2000</td><td >199.312436804853</td><td >486.632962588473</td><td >9d6a39b155c46a314ba0</td><td >2000</td><td >43</td><td >0</td></tr><tr ><td >slicer</td><td ></td><td >213.684141657355</td><td >386.564165871724</td><td >3000</td><td >169.273004097959</td><td >72.3999775545705</td><td >869812a063825807ce03</td><td >3000</td><td >44</td><td >0</td></tr><tr ><td >slicer</td><td ></td><td >209.666329625885</td><td >107.4216380182</td><td >4000</td><td >172.133468149646</td><td >73.7714863498483</td><td >729d6a656109578a33ea</td><td >4000</td><td >45</td><td >0</td></tr><tr ><td >slicer</td><td ></td><td >211.176393448497</td><td >288.307053476236</td><td >5000</td><td >169.273004097959</td><td >78.8642612648</td><td >c6c1fd063835d1eba317</td><td >5000</td><td >46</td><td >0</td></tr><tr ><td >slicer</td><td ></td><td >211.176393448497</td><td >193.928511306885</td><td >6000</td><td >169.273004097959</td><td >74.9856910386623</td><td >66e7f8faa318d5075e4a</td><td >6000</td><td >47</td><td >0</td></tr><tr ><td >shape</td><td ></td><td >233.746127328225</td><td >33.6142752931934</td><td >7000</td><td >126.641284547362</td><td >43.9571292295606</td><td >4507be70112d0a25bb85</td><td >7000</td><td >48</td><td >0</td></tr><tr ><td >shape</td><td >'Close Filter'</td><td >80.2426693629929</td><td >247.199191102123</td><td >8000</td><td >111.304347826087</td><td >81.5369059656218</td><td >11a0db92261015303b7a</td><td >8000</td><td >49</td><td >0</td></tr><tr ><td >shape</td><td ></td><td >0</td><td >32.355915065723</td><td >29000</td><td >97.0677451971688</td><td >687.239635995956</td><td >e31232802b7b6bd7805e</td><td >29000</td><td >50</td><td >0</td></tr><tr ><td ></td><td ></td><td >15.530839231547</td><td >244.610717896866</td><td >30000</td><td >57</td><td >56.9464105156724</td><td >c97008eab567162d6966</td><td >30000</td><td >51</td><td >0</td></tr><tr ><td >shape</td><td >'Close Filter'</td><td >7.76541961577351</td><td >7.76541961577351</td><td >1000</td><td >40.1213346814965</td><td >40.1213346814965</td><td >3e40ba58111bc92886b7</td><td ></td><td >52</td><td >0</td></tr><tr ><td >shape</td><td >'Close Filter'</td><td >0</td><td >0</td><td >0</td><td >57</td><td >56.9464105156724</td><td >b7a84d013970c0600034</td><td >1000</td><td >53</td><td >0</td></tr><tr ><td ></td><td ></td><td >15.530839231547</td><td >121.658240647118</td><td >31000</td><td >56.9464105156724</td><td >56.9464105156724</td><td >33445e0ba09d62e00da3</td><td >31000</td><td >54</td><td >0</td></tr><tr ><td >shape</td><td >'Close Filter'</td><td >7.76541961577351</td><td >7.76541961577352</td><td >1000</td><td >40.1213346814965</td><td >40.1213346814965</td><td >b2dd437208e96060cae3</td><td ></td><td >55</td><td >0</td></tr><tr ><td >shape</td><td >'Close Filter'</td><td >0</td><td >0</td><td >0</td><td >56.9464105156724</td><td >56.9464105156724</td><td >e39a8b06ad922bad3eb9</td><td >1000</td><td >56</td><td >0</td></tr><tr ><td ></td><td ></td><td >14.2366026289181</td><td >368.857431749242</td><td >32000</td><td >56.9464105156724</td><td >56.9464105156724</td><td >d9754b25404d33003d4e</td><td >32000</td><td >57</td><td >0</td></tr><tr ><td >shape</td><td >'Close Filter'</td><td >7.76541961577351</td><td >7.76541961577352</td><td >1000</td><td >40.1213346814965</td><td >40.1213346814965</td><td >2b61c86a9052087397a8</td><td ></td><td >58</td><td >0</td></tr><tr ><td >shape</td><td >'Close Filter'</td><td >0</td><td >0</td><td >0</td><td >56.9464105156724</td><td >56.9464105156724</td><td >73f01057e327aed2b9a9</td><td >1000</td><td >59</td><td >0</td></tr><tr ><td ></td><td ></td><td >14.2366026289181</td><td >494.398382204247</td><td >33000</td><td >56.9464105156724</td><td >56.9464105156724</td><td >5fdfebeaa0a990083e4c</td><td >33000</td><td >60</td><td >0</td></tr><tr ><td >shape</td><td >'Close Filter'</td><td >7.76541961577351</td><td >7.76541961577352</td><td >1000</td><td >40.1213346814965</td><td >40.1213346814965</td><td >b2ee10045a06e9884715</td><td ></td><td >61</td><td >0</td></tr><tr ><td >shape</td><td >'Close Filter'</td><td >0</td><td >0</td><td >0</td><td >56.9464105156724</td><td >56.9464105156724</td><td >71456ac12b5e05302e59</td><td >1000</td><td >62</td><td >0</td></tr><tr ><td >textbox</td><td ></td><td >5.17694641051567</td><td >173.427704752275</td><td >34000</td><td >80.2426693629929</td><td >32.355915065723</td><td >2f80b9f0e376d121adaa</td><td >34000</td><td >63</td><td >0</td></tr><tr ><td >textbox</td><td ></td><td >3.16831683168317</td><td >293.069306930693</td><td >35000</td><td >90.2970297029703</td><td >33.2673267326733</td><td >86b8e9e4977d098ebd03</td><td >35000</td><td >64</td><td >0</td></tr><tr ><td >textbox</td><td ></td><td >4.75247524752475</td><td >418.217821782178</td><td >36000</td><td >90.2970297029703</td><td >41.1881188118812</td><td >f00b0ac5d4c526a0ce70</td><td >36000</td><td >65</td><td >0</td></tr><tr ><td >textbox</td><td ></td><td >3.88270980788675</td><td >50.4752275025278</td><td >37000</td><td >90.5965621840243</td><td >33.6501516683519</td><td >622d76ce7a80cbb0b508</td><td >37000</td><td >66</td><td >0</td></tr><tr ><td >textbox</td><td ></td><td >6.25</td><td >541.25</td><td >38000</td><td >91.25</td><td >30</td><td >9ca9a1e6da8e2d0b50a0</td><td >38000</td><td >67</td><td >0</td></tr><tr ><td >shape</td><td >'Vain'</td><td >414.155712841254</td><td >438.746208291203</td><td >39000</td><td >815.369059656218</td><td >253.670374115268</td><td >460381a7babea0d222d6</td><td >39000</td><td >68</td><td >0</td></tr><tr ><td >textbox</td><td ></td><td >144.158415841584</td><td >25.3465346534653</td><td >40000</td><td >228.118811881188</td><td >82.3762376237624</td><td >379f537bc2379738ad97</td><td >40000</td><td >69</td><td >0</td></tr><tr ><td >image</td><td ></td><td >315.247524752475</td><td >66.5346534653465</td><td >41000</td><td >52.2772277227723</td><td >47.5247524752475</td><td >36520a12a0d56072a30d</td><td >41000</td><td >70</td><td >0</td></tr><tr ><td >actionButton</td><td >'Menu Button'</td><td >5</td><td >243.75</td><td >42000</td><td >87.5</td><td >82.5</td><td >06a26f94d5529113bc40</td><td >42000</td><td >71</td><td >0</td></tr><tr ><td >actionButton</td><td >'Home Button'</td><td >4.62650602409639</td><td >117.204819277108</td><td >43000</td><td >87.9036144578313</td><td >81.7349397590361</td><td >fea910eb8c9845d04711</td><td >43000</td><td >72</td><td >0</td></tr><tr ><td >actionButton</td><td >'FIlter Button'</td><td >5</td><td >368.75</td><td >44000</td><td >87.5</td><td >91.25</td><td >73f08b13e96e8c0d8b20</td><td >44000</td><td >73</td><td >0</td></tr><tr ><td >actionButton</td><td >'Reset Button'</td><td >5</td><td >492.5</td><td >45000</td><td >92.5</td><td >75</td><td >8e043ce76399c0490a2b</td><td >45000</td><td >74</td><td >0</td></tr><tr ><td >image</td><td ></td><td >588.75</td><td >62.5</td><td >46000</td><td >51.25</td><td >47.5</td><td >b471ef1cc13650aae6bd</td><td >46000</td><td >75</td><td >0</td></tr><tr ><td >image</td><td ></td><td >1120</td><td >60</td><td >47000</td><td >56.25</td><td >55</td><td >95078b8604d551269c11</td><td >47000</td><td >76</td><td >0</td></tr><tr ><td >image</td><td ></td><td >940</td><td >48.75</td><td >48000</td><td >52.5</td><td >67.5</td><td >a21a0bfcd0bd34b8ce84</td><td >48000</td><td >77</td><td >0</td></tr><tr ><td >image</td><td ></td><td >773.75</td><td >55</td><td >49000</td><td >56.25</td><td >55</td><td >ca115e23734d0479dec6</td><td >49000</td><td >78</td><td >0</td></tr><tr ><td >image</td><td ></td><td >388.75</td><td >55</td><td >50000</td><td >60</td><td >63.75</td><td >aa27366e1b2961390e17</td><td >50000</td><td >79</td><td >0</td></tr></table><br></br><h3><div>Visuals in Main Menu:</div></h3><table border='1px' cellpadding='1'><tr ><td >Visual Type</td><td >Title</td><td >X</td><td >Y</td><td >Z</td><td >Width</td><td >Height</td><td >Name</td><td >tabOrder</td><td >VisualIndex</td><td >PageIndex</td></tr><tr ><td >image</td><td ></td><td >0</td><td >0</td><td >0</td><td >1280</td><td >720.792079207921</td><td >f963d7e1e4004e6a4c11</td><td ></td><td >0</td><td >1</td></tr><tr ><td >shape</td><td ></td><td >29.7975708502024</td><td >24.6153846153846</td><td >1000</td><td >380.890688259109</td><td >671.093117408907</td><td >e2a5f830a9c83c160363</td><td >1000</td><td >1</td><td >1</td></tr><tr ><td >shape</td><td ></td><td >378.855054811206</td><td >31.1814859926918</td><td >2000</td><td >353.909866017052</td><td >670.401948842875</td><td >aefb622078d938814d90</td><td >2000</td><td >2</td><td >1</td></tr><tr ><td >shape</td><td ></td><td >704.701583434836</td><td >32.7405602923264</td><td >3000</td><td >269.719853836784</td><td >670.401948842875</td><td >7a703950dd28d9792e38</td><td >3000</td><td >3</td><td >1</td></tr><tr ><td >shape</td><td ></td><td >955.712545676005</td><td >28.0633373934227</td><td >4000</td><td >291.546894031669</td><td >670.401948842875</td><td >c034e51b08ac50800a63</td><td >4000</td><td >4</td><td >1</td></tr><tr ><td >textbox</td><td ></td><td >48.3313032886724</td><td >59.2448233861145</td><td >5000</td><td >671.961023142509</td><td >353.909866017052</td><td >40ee57e81b10a8018bc3</td><td >5000</td><td >5</td><td >1</td></tr><tr ><td >image</td><td ></td><td >278.542510121458</td><td >286.315789473684</td><td >6000</td><td >954.817813765182</td><td >322.591093117409</td><td >e13bd3b572c92a2c8a49</td><td >7000</td><td >6</td><td >1</td></tr><tr ><td >textbox</td><td ></td><td >416.272838002436</td><td >547.235079171742</td><td >7000</td><td >717.174177831912</td><td >65.4811205846529</td><td >f67243a4dc2ba100802a</td><td >8000</td><td >7</td><td >1</td></tr><tr ><td >textbox</td><td ></td><td >478.202247191011</td><td >596.85393258427</td><td >8000</td><td >122.247191011236</td><td >61.123595505618</td><td >2b7050a0097500d01795</td><td >9000</td><td >8</td><td >1</td></tr><tr ><td >textbox</td><td ></td><td >643.595505617978</td><td >596.85393258427</td><td >9000</td><td >161.797752808989</td><td >61.123595505618</td><td >9bb18e909e2a77b0067c</td><td >10000</td><td >9</td><td >1</td></tr><tr ><td >textbox</td><td ></td><td >839.550561797753</td><td >596.85393258427</td><td >10000</td><td >161.797752808989</td><td >61.123595505618</td><td >2f83b50db08aaab80d4e</td><td >11000</td><td >10</td><td >1</td></tr><tr ><td >textbox</td><td ></td><td >1001.34831460674</td><td >596.85393258427</td><td >11000</td><td >161.797752808989</td><td >61.123595505618</td><td >76628bf9d610de2a2066</td><td >12000</td><td >11</td><td >1</td></tr><tr ><td >textbox</td><td ></td><td >469.213483146067</td><td >643.595505617978</td><td >12000</td><td >131.23595505618</td><td >44.9438202247191</td><td >9d9cb38319401d8cce8a</td><td >13000</td><td >12</td><td >1</td></tr><tr ><td >textbox</td><td ></td><td >648.988764044944</td><td >643.595505617978</td><td >13000</td><td >131.23595505618</td><td >44.9438202247191</td><td >42ff5c3816d0c8c6c371</td><td >14000</td><td >13</td><td >1</td></tr><tr ><td >textbox</td><td ></td><td >843.14606741573</td><td >643.595505617978</td><td >14000</td><td >158.202247191011</td><td >44.9438202247191</td><td >b7f2cd881702badeb147</td><td >15000</td><td >14</td><td >1</td></tr><tr ><td >textbox</td><td ></td><td >1004.94382022472</td><td >643.595505617978</td><td >15000</td><td >158.202247191011</td><td >44.9438202247191</td><td >e29ae2fc85b3b0b83b11</td><td >16000</td><td >15</td><td >1</td></tr><tr ><td >shape</td><td >'fffff'</td><td >593.36032388664</td><td >406.801619433198</td><td >16000</td><td >316.113360323887</td><td >81.6194331983806</td><td >fb525458e55265be2ab3</td><td >6000</td><td >16</td><td >1</td></tr><tr ><td >textbox</td><td ></td><td >29.3378607809847</td><td >647.877758913413</td><td >17000</td><td >152.801358234295</td><td >45.2292020373514</td><td >c7e1a2911c349c449a00</td><td >17000</td><td >17</td><td >1</td></tr><tr ><td >image</td><td ></td><td >182.672064777328</td><td >640</td><td >18000</td><td >55.7085020242915</td><td >49.2307692307692</td><td >9a6716a4de9b0742dd8c</td><td >18000</td><td >18</td><td >1</td></tr><tr ><td >image</td><td ></td><td >248.744939271255</td><td >636.113360323887</td><td >19000</td><td >62.1862348178138</td><td >53.1174089068826</td><td >f482afa360695ee84c31</td><td >19000</td><td >19</td><td >1</td></tr></table><br></br><h3><div>Visuals in Tooltips:</div></h3><table border='1px' cellpadding='1'><tr ><td >Visual Type</td><td >Title</td><td >X</td><td >Y</td><td >Z</td><td >Width</td><td >Height</td><td >Name</td><td >tabOrder</td><td >VisualIndex</td><td >PageIndex</td></tr><tr ><td >shape</td><td ></td><td >0</td><td >18.8794153471376</td><td >0</td><td >500</td><td >331.303288672351</td><td >a9f531b350aac149aca0</td><td ></td><td >0</td><td >2</td></tr><tr ><td >tableEx</td><td ></td><td >6.09013398294763</td><td >124.847746650426</td><td >3000</td><td >283.800243605359</td><td >173.568818514007</td><td >a8b30729890837e0869e</td><td ></td><td >1</td><td >2</td></tr><tr ><td >lineChart</td><td ></td><td >17.0523751522534</td><td >10.353227771011</td><td >5000</td><td >472.594397076736</td><td >98.0511571254568</td><td >1fa61700b7a8061ea0c9</td><td ></td><td >2</td><td >2</td></tr><tr ><td >barChart</td><td ></td><td >301.461632155907</td><td >124.847746650426</td><td >6000</td><td >188.185140073082</td><td >216.199756394641</td><td >86adceaeccb56154d798</td><td ></td><td >3</td><td >2</td></tr><tr ><td >shape</td><td ></td><td >0</td><td >0</td><td >4000</td><td >500</td><td >124.847746650426</td><td >05a764d7d325c20639a6</td><td ></td><td >4</td><td >2</td></tr><tr ><td >shape</td><td ></td><td >0</td><td >115.10353227771</td><td >1000</td><td >301.461632155907</td><td >193.05724725944</td><td >3df7c81e937e948a2dd7</td><td ></td><td >5</td><td >2</td></tr><tr ><td >shape</td><td ></td><td >295.980511571255</td><td >115.10353227771</td><td >2000</td><td >204.019488428745</td><td >235.079171741778</td><td >d5f64a320e820ba218a4</td><td ></td><td >6</td><td >2</td></tr></table><hr></hr><br></br><h3><div>List of Bookmarks:</div></h3><br></br><table border='1px' cellpadding='1'><tr ><td >DisplayName</td><td >Page Name</td><td >Index</td><td >Name</td></tr><tr ><td >Menu</td><td >ReportSectionc61443ac188526d463c0</td><td >0</td><td >Bookmarkbfb27c084e12320dd822</td></tr><tr ><td >Reset</td><td >ReportSection02c2af75067ad78068b2</td><td >1</td><td >Bookmarkee030b064e667ee02c5b</td></tr><tr ><td >Filter</td><td >ReportSection02c2af75067ad78068b2</td><td >2</td><td >Bookmark648da9232b349b43507e</td></tr><tr ><td >Close Filter</td><td >ReportSection02c2af75067ad78068b2</td><td >3</td><td >Bookmark9d5e37c6117ce2847455</td></tr></table><hr></hr><br></br><h3><div>List of all Columns/Fields/Measures/Expressions Used in Visuals:</div></h3><br></br><table border='1px' cellpadding='1' cellspacing='1'><tr ><td >Name</td><td >Table Name</td><td >Aggregation</td><td >Expression</td><td >VisualIndex</td><td >PageIndex</td></tr><tr ><td >Availability</td><td >Key Measure</td><td ></td><td >Key Measure.Availability</td><td >0</td><td >0</td></tr><tr ><td >OEE</td><td >Key Measure</td><td ></td><td >Key Measure.OEE</td><td >1</td><td >0</td></tr><tr ><td >Performance</td><td >Key Measure</td><td ></td><td >Key Measure.Performance</td><td >2</td><td >0</td></tr><tr ><td >Quality</td><td >Key Measure</td><td ></td><td >Key Measure.Quality</td><td >3</td><td >0</td></tr><tr ><td ></td><td >Key Measure</td><td ></td><td >Key Measure.% Good</td><td >4</td><td >0</td></tr><tr ><td >Date</td><td >Dates</td><td ></td><td >Dates.Date</td><td >4</td><td >0</td></tr><tr ><td >Total Biscuit</td><td >Key Measure</td><td ></td><td >Key Measure.Total Biscuit</td><td >4</td><td >0</td></tr><tr ><td >Good Biscuit</td><td >Key Measure</td><td ></td><td >Key Measure.Good Biscuit</td><td >4</td><td >0</td></tr><tr ><td >Bad Biscuit</td><td >Key Measure</td><td ></td><td >Key Measure.Bad Biscuit</td><td >4</td><td >0</td></tr><tr ><td >Availability</td><td >Key Measure</td><td ></td><td >Key Measure.Availability</td><td >4</td><td >0</td></tr><tr ><td >Quality</td><td >Key Measure</td><td ></td><td >Key Measure.Quality</td><td >4</td><td >0</td></tr><tr ><td >Performance</td><td >Key Measure</td><td ></td><td >Key Measure.Performance</td><td >4</td><td >0</td></tr><tr ><td >OEE</td><td >Key Measure</td><td ></td><td >Key Measure.OEE</td><td >4</td><td >0</td></tr><tr ><td >Date</td><td >Dates</td><td ></td><td >Dates.Date</td><td >4</td><td >0</td></tr><tr ><td >Machine</td><td >Fact</td><td ></td><td >Fact.Machine</td><td >5</td><td >0</td></tr><tr ><td >Product</td><td >Fact</td><td ></td><td >Fact.Product</td><td >5</td><td >0</td></tr><tr ><td >Total Biscuit</td><td >Key Measure</td><td ></td><td >Key Measure.Total Biscuit</td><td >5</td><td >0</td></tr><tr ><td >GoodMadeBiscuits</td><td >Fact</td><td >Sum</td><td >Sum(Fact.GoodMadeBiscuits)</td><td >5</td><td >0</td></tr><tr ><td ></td><td >Key Measure</td><td ></td><td >Key Measure.% Good</td><td >5</td><td >0</td></tr><tr ><td >OEE</td><td >Key Measure</td><td ></td><td >Key Measure.OEE</td><td >5</td><td >0</td></tr><tr ><td >Quality</td><td >Key Measure</td><td ></td><td >Key Measure.Quality</td><td >5</td><td >0</td></tr><tr ><td >Performance</td><td >Key Measure</td><td ></td><td >Key Measure.Performance</td><td >5</td><td >0</td></tr><tr ><td >Availability</td><td >Key Measure</td><td ></td><td >Key Measure.Availability</td><td >5</td><td >0</td></tr><tr ><td >Total Biscuit</td><td >Key Measure</td><td ></td><td >Key Measure.Total Biscuit</td><td >6</td><td >0</td></tr><tr ><td >Good Biscuit</td><td >Key Measure</td><td ></td><td >Key Measure.Good Biscuit</td><td >7</td><td >0</td></tr><tr ><td ></td><td >Key Measure</td><td ></td><td >Key Measure.% Good</td><td >8</td><td >0</td></tr><tr ><td >Total Duration</td><td >Key Measure</td><td ></td><td >Key Measure.Total Duration</td><td >9</td><td >0</td></tr><tr ><td >Run Time</td><td >Key Measure</td><td ></td><td >Key Measure.Run Time</td><td >10</td><td >0</td></tr><tr ><td >Product</td><td >Fact</td><td ></td><td >Fact.Product</td><td >44</td><td >0</td></tr><tr ><td >Product</td><td >Fact</td><td ></td><td >Fact.Product</td><td >44</td><td >0</td></tr><tr ><td >Date</td><td >Dates</td><td ></td><td >Dates.Date</td><td >45</td><td >0</td></tr><tr ><td >Date</td><td >Dates</td><td ></td><td >Dates.Date</td><td >45</td><td >0</td></tr><tr ><td >Machine Type</td><td >Machine</td><td ></td><td >Machine.Machine Type</td><td >46</td><td >0</td></tr><tr ><td >Machine Type</td><td >Machine</td><td ></td><td >Machine.Machine Type</td><td >46</td><td >0</td></tr><tr ><td >OEE Category</td><td >Fact</td><td ></td><td >Fact.OEE Category</td><td >47</td><td >0</td></tr><tr ><td >OEE Category</td><td >Fact</td><td ></td><td >Fact.OEE Category</td><td >47</td><td >0</td></tr><tr ><td >Week Number</td><td >Dates</td><td >Sum</td><td >Sum(Dates.Week Number)</td><td >1</td><td >2</td></tr><tr ><td >Availability</td><td >Key Measure</td><td ></td><td >Key Measure.Availability</td><td >1</td><td >2</td></tr><tr ><td >Performance</td><td >Key Measure</td><td ></td><td >Key Measure.Performance</td><td >1</td><td >2</td></tr><tr ><td >Quality</td><td >Key Measure</td><td ></td><td >Key Measure.Quality</td><td >1</td><td >2</td></tr><tr ><td >OEE</td><td >Key Measure</td><td ></td><td >Key Measure.OEE</td><td >1</td><td >2</td></tr><tr ><td >Date</td><td >Dates</td><td ></td><td >Dates.Date</td><td >2</td><td >2</td></tr><tr ><td >OEE</td><td >Key Measure</td><td ></td><td >Key Measure.OEE</td><td >2</td><td >2</td></tr><tr ><td >Date</td><td >Dates</td><td ></td><td >Dates.Date</td><td >2</td><td >2</td></tr><tr ><td >Machine Type</td><td >Machine</td><td ></td><td >Machine.Machine Type</td><td >3</td><td >2</td></tr><tr ><td >Good Biscuit</td><td >Key Measure</td><td ></td><td >Key Measure.Good Biscuit</td><td >3</td><td >2</td></tr><tr ><td >Machine Type</td><td >Machine</td><td ></td><td >Machine.Machine Type</td><td >3</td><td >2</td></tr></table><hr></hr><br></br><h3><div>List of Tables Used in Visuals:</div></h3><br></br><table border='1px' cellpadding='1' cellspacing='1'><tr ><td >Name</td></tr><tr ><td >Key Measure</td></tr><tr ><td >Dates</td></tr><tr ><td >Fact</td></tr><tr ><td >Machine</td></tr></table><hr></hr><br></br><h3><div>List of Columns Not Used in Visuals:</div></h3><br></br><table border='1px' cellpadding='1' cellspacing='1'><tr ><td >Name</td><td >Table Name</td><td >State</td><td >Data Category</td><td >Data Type</td><td >Description</td><td >Display Folder</td><td >Error Message</td><td >Format String</td><td >Is Hidden</td><td >Modified Time</td><td >Structure Modified Time</td><td >Sort by Column</td><td >Summarize By</td><td >Type</td><td >Expression</td></tr><tr ><td >StartDateTime</td><td >Fact</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >EndDateTime</td><td >Fact</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Duration</td><td >Fact</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >TotalBiscuitsMade</td><td >Fact</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Good Made Biscuits</td><td >Fact</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >BadMadeBiscuits</td><td >Fact</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >OEE</td><td >Fact</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Machine Name</td><td >Machine</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Product Name</td><td >Product</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Bsicuits Per Pallet</td><td >Product</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Biscuits_PER_PACK</td><td >Product</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Biscuits_PER_CASE</td><td >Product</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Biscuits_PER_PALLET</td><td >Product</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Machine</td><td >Target Speeds</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Product</td><td >Target Speeds</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >TARGET_Biscuits_per_hour</td><td >Target Speeds</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Duration Total</td><td >Target Speeds</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Year</td><td >Dates</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >QuarterOfYear</td><td >Dates</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >MonthOfYear</td><td >Dates</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >DayOfMonth</td><td >Dates</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >DateInt</td><td >Dates</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >MonthName</td><td >Dates</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >MonthInCalendar</td><td >Dates</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >QuarterInCalendar</td><td >Dates</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >DayInWeek</td><td >Dates</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >DayOfWeekName</td><td >Dates</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >WeekEnding</td><td >Dates</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >MonthnYear</td><td >Dates</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >QuarternYear</td><td >Dates</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >ShortYear</td><td >Dates</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >FY</td><td >Dates</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >No Order</td><td >Key Measure</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >Changeover Cleaning</td><td >Key Measure</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >Maintenance</td><td >Key Measure</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >No Order Total</td><td >Key Measure</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >Non Actual</td><td >Key Measure</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >#Availability</td><td >Key Measure</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >#Quality</td><td >Key Measure</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >#Performance</td><td >Key Measure</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >% Good</td><td >Key Measure</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >#%Good</td><td >Key Measure</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr></table><hr></hr><br></br><h3><div>List of Tables Not Used in Visuals:</div></h3><br></br><table border='1px' cellpadding='1' cellspacing='1'><tr ><td >Name</td></tr><tr ><td >Product</td></tr><tr ><td >Target Speeds</td></tr></table><h1><div>------------------******   Model    ******---------------------</div></h1><br></br><h2><div>Model: Challenge 18</div></h2><br></br><hr></hr><br></br><h3><div>List of Tables:</div></h3><br></br><table border='1px' cellpadding='1' cellspacing='1'><tr ><td >Name</td><td >Description</td><td >Storage Mode</td><td >Source</td><td >Is Hidden</td></tr><tr ><td >Fact</td><td ></td><td >Import</td><td ><pre>let
    Source = Excel.Workbook(File.Contents("D:\EDNA Files\Challenge 18\Challenge 18.xlsx"), null, true),
    Fact_Sheet = Source{[Item="Fact",Kind="Sheet"]}[Data],
    #"Promoted Headers" = Table.PromoteHeaders(Fact_Sheet, [PromoteAllScalars=true]),
    #"Changed Type" = Table.TransformColumnTypes(#"Promoted Headers",{{"Machine", type text}, {"StartDateTime", type datetime}, {"EndDateTime", type datetime}, {"Duration", type number}, {"TotalBiscuitsMade", Int64.Type}, {"GoodMadeBiscuits", Int64.Type}, {"BadMadeBiscuits", Int64.Type}, {"OEE Category", type text}, {"Product", type text}, {"StartDateTime_1", type datetime}}),
    #"Split Column by Delimiter" = Table.SplitColumn(Table.TransformColumnTypes(#"Changed Type", {{"StartDateTime_1", type text}}, "en-US"), "StartDateTime_1", Splitter.SplitTextByEachDelimiter({" "}, QuoteStyle.Csv, false), {"StartDateTime_1.1", "StartDateTime_1.2"}),
    #"Changed Type1" = Table.TransformColumnTypes(#"Split Column by Delimiter",{{"StartDateTime_1.1", type date}, {"StartDateTime_1.2", type time}}),
    #"Removed Columns" = Table.RemoveColumns(#"Changed Type1",{"StartDateTime_1.2", "StartDateTime_1.1"}),
    #"Added Custom" = Table.AddColumn(#"Removed Columns", "Custom", each [EndDateTime] - [StartDateTime]),
    #"Reordered Columns" = Table.ReorderColumns(#"Added Custom",{"Machine", "StartDateTime", "EndDateTime", "Duration", "Custom", "TotalBiscuitsMade", "GoodMadeBiscuits", "BadMadeBiscuits", "OEE Category", "Product"}),
    #"Changed Type2" = Table.TransformColumnTypes(#"Reordered Columns",{{"Custom", type duration}}),
    #"Renamed Columns" = Table.RenameColumns(#"Changed Type2",{{"Custom", "Time Diff"}}),
    #"Removed Columns1" = Table.RemoveColumns(#"Renamed Columns",{"Time Diff"}),
    #"Split Column by Delimiter1" = Table.SplitColumn(#"Removed Columns1", "OEE Category", Splitter.SplitTextByEachDelimiter({" "}, QuoteStyle.Csv, false), {"OEE Category.1", "OEE Category.2"}),
    #"Changed Type3" = Table.TransformColumnTypes(#"Split Column by Delimiter1",{{"OEE Category.1", type text}, {"OEE Category.2", type text}}),
    #"Replaced Value" = Table.ReplaceValue(#"Changed Type3","(","",Replacer.ReplaceText,{"OEE Category.2"}),
    #"Replaced Value1" = Table.ReplaceValue(#"Replaced Value",")","",Replacer.ReplaceText,{"OEE Category.2"}),
    #"Renamed Columns1" = Table.RenameColumns(#"Replaced Value1",{{"OEE Category.1", "OEE Category Short"}, {"OEE Category.2", "OEE Category"}, {"Duration", "Duration1"}}),
    #"Replaced Value2" = Table.ReplaceValue(#"Renamed Columns1","Time","Run Time",Replacer.ReplaceText,{"OEE Category"}),
    #"Filtered Rows" = Table.SelectRows(#"Replaced Value2", each true),
    #"Renamed Columns2" = Table.RenameColumns(#"Filtered Rows",{{"Duration1", "Duration"}}),
    #"Changed Type4" = Table.TransformColumnTypes(#"Renamed Columns2",{{"StartDateTime", type date}, {"EndDateTime", type date}}),
    #"Renamed Columns3" = Table.RenameColumns(#"Changed Type4",{{"OEE Category Short", "OEE"}, {"GoodMadeBiscuits", "Good Made Biscuits"}})
in
    #"Renamed Columns3"</pre></td><td >False</td></tr><tr ><td >DateTableTemplate_93942472-1d72-4e3f-9dc2-4f12021ba95f</td><td ></td><td >Import</td><td ><pre>Calendar(Date(2015,1,1), Date(2015,1,1))</pre></td><td >True</td></tr><tr ><td >Machine</td><td ></td><td >Import</td><td ><pre>let
    Source = Excel.Workbook(File.Contents("D:\EDNA Files\Challenge 18\Challenge 18.xlsx"), null, true),
    Machine_Sheet = Source{[Item="Machine",Kind="Sheet"]}[Data],
    #"Changed Type" = Table.TransformColumnTypes(Machine_Sheet,{{"Column1", type text}, {"Column2", type text}}),
    #"Promoted Headers" = Table.PromoteHeaders(#"Changed Type", [PromoteAllScalars=true]),
    #"Changed Type1" = Table.TransformColumnTypes(#"Promoted Headers",{{"Machine Name", type text}, {"Machine Type", type text}})
in
    #"Changed Type1"</pre></td><td >False</td></tr><tr ><td >Product</td><td ></td><td >Import</td><td ><pre>let
    Source = Excel.Workbook(File.Contents("D:\EDNA Files\Challenge 18\Challenge 18.xlsx"), null, true),
    Product_Sheet = Source{[Item="Product",Kind="Sheet"]}[Data],
    #"Promoted Headers" = Table.PromoteHeaders(Product_Sheet, [PromoteAllScalars=true]),
    #"Changed Type" = Table.TransformColumnTypes(#"Promoted Headers",{{"Product Name", type text}, {"Bsicuits Per Pallet", Int64.Type}, {"Biscuits_PER_PACK", Int64.Type}, {"Biscuits_PER_CASE", Int64.Type}, {"Biscuits_PER_PALLET", Int64.Type}})
in
    #"Changed Type"</pre></td><td >False</td></tr><tr ><td >Target Speeds</td><td ></td><td >Import</td><td ><pre>let
    Source = Excel.Workbook(File.Contents("D:\EDNA Files\Challenge 18\Challenge 18.xlsx"), null, true),
    #"Target Speeds_Sheet" = Source{[Item="Target Speeds",Kind="Sheet"]}[Data],
    #"Promoted Headers" = Table.PromoteHeaders(#"Target Speeds_Sheet", [PromoteAllScalars=true]),
    #"Changed Type" = Table.TransformColumnTypes(#"Promoted Headers",{{"Machine", type text}, {"Product", type text}, {"TARGET_Biscuits_per_hour", Int64.Type}})
in
    #"Changed Type"</pre></td><td >False</td></tr><tr ><td >Key Measure</td><td ></td><td >Import</td><td ><pre>let
    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText("i44FAA==", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Column1 = _t]),
    #"Changed Type" = Table.TransformColumnTypes(Source,{{"Column1", type text}}),
    #"Removed Columns" = Table.RemoveColumns(#"Changed Type",{"Column1"})
in
    #"Removed Columns"</pre></td><td >False</td></tr><tr ><td >Dates</td><td ></td><td >Import</td><td ><pre>let
    Source = Query1(#date(2021, 7, 1), #date(2021, 7, 31), 1)
in
    Source</pre></td><td >False</td></tr><tr ><td >LocalDateTable_04ac333c-cc98-4e17-bcdd-d730817b43c1</td><td ></td><td >Import</td><td ><pre>Calendar(Date(Year(MIN('Dates'[Date])), 1, 1), Date(Year(MAX('Dates'[Date])), 12, 31))</pre></td><td >True</td></tr><tr ><td >LocalDateTable_b194ffe4-4f59-4869-bd56-ae42207e5df3</td><td ></td><td >Import</td><td ><pre>Calendar(Date(Year(MIN('Dates'[WeekEnding])), 1, 1), Date(Year(MAX('Dates'[WeekEnding])), 12, 31))</pre></td><td >True</td></tr><tr ><td >LocalDateTable_3ebec2a4-7376-4e00-b4a6-5be7217115ab</td><td ></td><td >Import</td><td ><pre>Calendar(Date(Year(MIN('Fact'[EndDateTime])), 1, 1), Date(Year(MAX('Fact'[EndDateTime])), 12, 31))</pre></td><td >True</td></tr></table><hr></hr><br></br><h3><div>List of Measures:</div></h3><br></br><table border="1" cellpadding="3">
	<tr>
		<th>Measure Name</th>
		<th>Table Name</th>
		<th>Description</th>
		<th>Expression</th>
		<th>Dependency</th>
		<th>Reverse Dependency</th>
	</tr>
	<tr>
		<td>Total Duration</td>
		<td>Key Measure</td>
		<td></td>
		<td><pre>SUM('Fact'[Duration])</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Total Duration</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: Fact</li>
<li>Column: Duration (Table: Fact)</li>
</ul></span></li>
</ul></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Total Duration</span><span class="dropDownCaret">
<ul class="nested">
<li><span class="caret">Measure: No Order</span>
<ul class="nested">
<li><span class="caret">Measure: Availability</span>
<ul class="nested">
<li>Measure: #Availability</li>
<li>Measure: OEE</li>
</ul></li>
</ul></li>
<li>Measure: Changeover Cleaning</li>
<li>Measure: Maintenance</li>
<li>Measure: Run Time</li>
<li><span class="caret">Measure: Availability</span>
<ul class="nested">
<li>Measure: #Availability</li>
<li>Measure: OEE</li>
</ul></li>
<li>Calc_Column: Duration Total</li>
</ul></span></li>
</ul></td>
	</tr>
	<tr>
		<td>No Order</td>
		<td>Key Measure</td>
		<td></td>
		<td><pre>CALCULATE([Total Duration], FILTER('Fact','Fact'[OEE Category] = "No Order"))</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: No Order</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: Fact</li>
<li>Column: OEE Category (Table: Fact)</li>
<li><span class="caret">Measure: Total Duration (Table: Key Measure)</span>
<ul class="nested">
<li>Table: Fact</li>
<li>Column: Duration (Table: Fact)</li>
</ul></li>
</ul></span></li>
</ul></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: No Order</span><span class="dropDownCaret">
<ul class="nested">
<li><span class="caret">Measure: Availability</span>
<ul class="nested">
<li>Measure: #Availability</li>
<li>Measure: OEE</li>
</ul></li>
</ul></span></li>
</ul></td>
	</tr>
	<tr>
		<td>Changeover Cleaning</td>
		<td>Key Measure</td>
		<td></td>
		<td><pre>CALCULATE([Total Duration], FILTER('Fact','Fact'[OEE Category] = "Changeover Cleaning"))</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Changeover Cleaning</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: Fact</li>
<li>Column: OEE Category (Table: Fact)</li>
<li><span class="caret">Measure: Total Duration (Table: Key Measure)</span>
<ul class="nested">
<li>Table: Fact</li>
<li>Column: Duration (Table: Fact)</li>
</ul></li>
</ul></span></li>
</ul></td>
		<td>Measure: Changeover Cleaning</td>
	</tr>
	<tr>
		<td>Maintenance</td>
		<td>Key Measure</td>
		<td></td>
		<td><pre>CALCULATE([Total Duration], FILTER('Fact','Fact'[OEE Category] = "Maintenance"))</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Maintenance</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: Fact</li>
<li>Column: OEE Category (Table: Fact)</li>
<li><span class="caret">Measure: Total Duration (Table: Key Measure)</span>
<ul class="nested">
<li>Table: Fact</li>
<li>Column: Duration (Table: Fact)</li>
</ul></li>
</ul></span></li>
</ul></td>
		<td>Measure: Maintenance</td>
	</tr>
	<tr>
		<td>Run Time</td>
		<td>Key Measure</td>
		<td></td>
		<td><pre>CALCULATE([Total Duration], FILTER('Fact','Fact'[OEE Category] = "Run Time"))</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Run Time</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: Fact</li>
<li>Column: OEE Category (Table: Fact)</li>
<li><span class="caret">Measure: Total Duration (Table: Key Measure)</span>
<ul class="nested">
<li>Table: Fact</li>
<li>Column: Duration (Table: Fact)</li>
</ul></li>
</ul></span></li>
</ul></td>
		<td>Measure: Run Time</td>
	</tr>
	<tr>
		<td>Good Biscuit</td>
		<td>Key Measure</td>
		<td></td>
		<td><pre>SUM('Fact'[Good Made Biscuits])</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Good Biscuit</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: Fact</li>
<li>Column: Good Made Biscuits (Table: Fact)</li>
</ul></span></li>
</ul></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Good Biscuit</span><span class="dropDownCaret">
<ul class="nested">
<li>Measure: Bad Biscuit</li>
<li><span class="caret">Measure: Quality</span>
<ul class="nested">
<li>Measure: #Quality</li>
<li>Measure: OEE</li>
</ul></li>
<li><span class="caret">Measure: % Good</span>
<ul class="nested">
<li>Measure: #%Good</li>
</ul></li>
</ul></span></li>
</ul></td>
	</tr>
	<tr>
		<td>Total Biscuit</td>
		<td>Key Measure</td>
		<td></td>
		<td><pre>SUM('Fact'[TotalBiscuitsMade])</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Total Biscuit</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: Fact</li>
<li>Column: TotalBiscuitsMade (Table: Fact)</li>
</ul></span></li>
</ul></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Total Biscuit</span><span class="dropDownCaret">
<ul class="nested">
<li>Measure: Bad Biscuit</li>
<li><span class="caret">Measure: Quality</span>
<ul class="nested">
<li>Measure: #Quality</li>
<li>Measure: OEE</li>
</ul></li>
<li><span class="caret">Measure: No Order Total</span>
<ul class="nested">
<li>Measure: Non Actual</li>
<li><span class="caret">Measure: Performance</span>
<ul class="nested">
<li>Measure: #Performance</li>
<li>Measure: OEE</li>
</ul></li>
</ul></li>
<li>Measure: Non Actual</li>
<li><span class="caret">Measure: Performance</span>
<ul class="nested">
<li>Measure: #Performance</li>
<li>Measure: OEE</li>
</ul></li>
<li><span class="caret">Measure: % Good</span>
<ul class="nested">
<li>Measure: #%Good</li>
</ul></li>
</ul></span></li>
</ul></td>
	</tr>
	<tr>
		<td>Bad Biscuit</td>
		<td>Key Measure</td>
		<td></td>
		<td><pre>[Total Biscuit] -[Good Biscuit]</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Bad Biscuit</span><span class="dropDownCaret">
<ul class="nested">
<li><span class="caret">Measure: Good Biscuit (Table: Key Measure)</span>
<ul class="nested">
<li>Table: Fact</li>
<li>Column: Good Made Biscuits (Table: Fact)</li>
</ul></li>
<li><span class="caret">Measure: Total Biscuit (Table: Key Measure)</span>
<ul class="nested">
<li>Table: Fact</li>
<li>Column: TotalBiscuitsMade (Table: Fact)</li>
</ul></li>
</ul></span></li>
</ul></td>
		<td>Measure: Bad Biscuit</td>
	</tr>
	<tr>
		<td>Quality</td>
		<td>Key Measure</td>
		<td></td>
		<td><pre>DIVIDE([Good Biscuit],[Total Biscuit],0)</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Quality</span><span class="dropDownCaret">
<ul class="nested">
<li><span class="caret">Measure: Good Biscuit (Table: Key Measure)</span>
<ul class="nested">
<li>Table: Fact</li>
<li>Column: Good Made Biscuits (Table: Fact)</li>
</ul></li>
<li><span class="caret">Measure: Total Biscuit (Table: Key Measure)</span>
<ul class="nested">
<li>Table: Fact</li>
<li>Column: TotalBiscuitsMade (Table: Fact)</li>
</ul></li>
</ul></span></li>
</ul></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Quality</span><span class="dropDownCaret">
<ul class="nested">
<li>Measure: #Quality</li>
<li>Measure: OEE</li>
</ul></span></li>
</ul></td>
	</tr>
	<tr>
		<td>Availability</td>
		<td>Key Measure</td>
		<td></td>
		<td><pre>DIVIDE([No Order],[Total Duration],0)</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Availability</span><span class="dropDownCaret">
<ul class="nested">
<li><span class="caret">Measure: Total Duration (Table: Key Measure)</span>
<ul class="nested">
<li>Table: Fact</li>
<li>Column: Duration (Table: Fact)</li>
</ul></li>
<li><span class="caret">Measure: No Order (Table: Key Measure)</span>
<ul class="nested">
<li>Table: Fact</li>
<li>Column: OEE Category (Table: Fact)</li>
<li><span class="caret">Measure: Total Duration (Table: Key Measure)</span>
<ul class="nested">
<li>Table: Fact</li>
<li>Column: Duration (Table: Fact)</li>
</ul></li>
</ul></li>
</ul></span></li>
</ul></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Availability</span><span class="dropDownCaret">
<ul class="nested">
<li>Measure: #Availability</li>
<li>Measure: OEE</li>
</ul></span></li>
</ul></td>
	</tr>
	<tr>
		<td>No Order Total</td>
		<td>Key Measure</td>
		<td></td>
		<td><pre>CALCULATE([Total Biscuit], FILTER('Fact','Fact'[OEE Category] = "No Order"))</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: No Order Total</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: Fact</li>
<li>Column: OEE Category (Table: Fact)</li>
<li><span class="caret">Measure: Total Biscuit (Table: Key Measure)</span>
<ul class="nested">
<li>Table: Fact</li>
<li>Column: TotalBiscuitsMade (Table: Fact)</li>
</ul></li>
</ul></span></li>
</ul></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: No Order Total</span><span class="dropDownCaret">
<ul class="nested">
<li>Measure: Non Actual</li>
<li><span class="caret">Measure: Performance</span>
<ul class="nested">
<li>Measure: #Performance</li>
<li>Measure: OEE</li>
</ul></li>
</ul></span></li>
</ul></td>
	</tr>
	<tr>
		<td>Non Actual</td>
		<td>Key Measure</td>
		<td></td>
		<td><pre>[Total Biscuit] - [No Order Total]</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Non Actual</span><span class="dropDownCaret">
<ul class="nested">
<li><span class="caret">Measure: Total Biscuit (Table: Key Measure)</span>
<ul class="nested">
<li>Table: Fact</li>
<li>Column: TotalBiscuitsMade (Table: Fact)</li>
</ul></li>
<li><span class="caret">Measure: No Order Total (Table: Key Measure)</span>
<ul class="nested">
<li>Table: Fact</li>
<li>Column: OEE Category (Table: Fact)</li>
<li><span class="caret">Measure: Total Biscuit (Table: Key Measure)</span>
<ul class="nested">
<li>Table: Fact</li>
<li>Column: TotalBiscuitsMade (Table: Fact)</li>
</ul></li>
</ul></li>
</ul></span></li>
</ul></td>
		<td>Measure: Non Actual</td>
	</tr>
	<tr>
		<td>Performance</td>
		<td>Key Measure</td>
		<td></td>
		<td><pre>DIVIDE([No Order Total], [Total Biscuit], 0 )</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Performance</span><span class="dropDownCaret">
<ul class="nested">
<li><span class="caret">Measure: Total Biscuit (Table: Key Measure)</span>
<ul class="nested">
<li>Table: Fact</li>
<li>Column: TotalBiscuitsMade (Table: Fact)</li>
</ul></li>
<li><span class="caret">Measure: No Order Total (Table: Key Measure)</span>
<ul class="nested">
<li>Table: Fact</li>
<li>Column: OEE Category (Table: Fact)</li>
<li><span class="caret">Measure: Total Biscuit (Table: Key Measure)</span>
<ul class="nested">
<li>Table: Fact</li>
<li>Column: TotalBiscuitsMade (Table: Fact)</li>
</ul></li>
</ul></li>
</ul></span></li>
</ul></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Performance</span><span class="dropDownCaret">
<ul class="nested">
<li>Measure: #Performance</li>
<li>Measure: OEE</li>
</ul></span></li>
</ul></td>
	</tr>
	<tr>
		<td>#Availability</td>
		<td>Key Measure</td>
		<td></td>
		<td><pre>1- [Availability]</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: #Availability</span><span class="dropDownCaret">
<ul class="nested">
<li><span class="caret">Measure: Availability (Table: Key Measure)</span>
<ul class="nested">
<li><span class="caret">Measure: Total Duration (Table: Key Measure)</span>
<ul class="nested">
<li>Table: Fact</li>
<li>Column: Duration (Table: Fact)</li>
</ul></li>
<li><span class="caret">Measure: No Order (Table: Key Measure)</span>
<ul class="nested">
<li>Table: Fact</li>
<li>Column: OEE Category (Table: Fact)</li>
<li><span class="caret">Measure: Total Duration (Table: Key Measure)</span>
<ul class="nested">
<li>Table: Fact</li>
<li>Column: Duration (Table: Fact)</li>
</ul></li>
</ul></li>
</ul></li>
</ul></span></li>
</ul></td>
		<td>Measure: #Availability</td>
	</tr>
	<tr>
		<td>#Quality</td>
		<td>Key Measure</td>
		<td></td>
		<td><pre>1 - [Quality]</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: #Quality</span><span class="dropDownCaret">
<ul class="nested">
<li><span class="caret">Measure: Quality (Table: Key Measure)</span>
<ul class="nested">
<li><span class="caret">Measure: Good Biscuit (Table: Key Measure)</span>
<ul class="nested">
<li>Table: Fact</li>
<li>Column: Good Made Biscuits (Table: Fact)</li>
</ul></li>
<li><span class="caret">Measure: Total Biscuit (Table: Key Measure)</span>
<ul class="nested">
<li>Table: Fact</li>
<li>Column: TotalBiscuitsMade (Table: Fact)</li>
</ul></li>
</ul></li>
</ul></span></li>
</ul></td>
		<td>Measure: #Quality</td>
	</tr>
	<tr>
		<td>#Performance</td>
		<td>Key Measure</td>
		<td></td>
		<td><pre>1 - [Performance]</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: #Performance</span><span class="dropDownCaret">
<ul class="nested">
<li><span class="caret">Measure: Performance (Table: Key Measure)</span>
<ul class="nested">
<li><span class="caret">Measure: Total Biscuit (Table: Key Measure)</span>
<ul class="nested">
<li>Table: Fact</li>
<li>Column: TotalBiscuitsMade (Table: Fact)</li>
</ul></li>
<li><span class="caret">Measure: No Order Total (Table: Key Measure)</span>
<ul class="nested">
<li>Table: Fact</li>
<li>Column: OEE Category (Table: Fact)</li>
<li><span class="caret">Measure: Total Biscuit (Table: Key Measure)</span>
<ul class="nested">
<li>Table: Fact</li>
<li>Column: TotalBiscuitsMade (Table: Fact)</li>
</ul></li>
</ul></li>
</ul></li>
</ul></span></li>
</ul></td>
		<td>Measure: #Performance</td>
	</tr>
	<tr>
		<td>OEE</td>
		<td>Key Measure</td>
		<td></td>
		<td><pre>[Performance] * [Quality] * [Availability]</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: OEE</span><span class="dropDownCaret">
<ul class="nested">
<li><span class="caret">Measure: Quality (Table: Key Measure)</span>
<ul class="nested">
<li><span class="caret">Measure: Good Biscuit (Table: Key Measure)</span>
<ul class="nested">
<li>Table: Fact</li>
<li>Column: Good Made Biscuits (Table: Fact)</li>
</ul></li>
<li><span class="caret">Measure: Total Biscuit (Table: Key Measure)</span>
<ul class="nested">
<li>Table: Fact</li>
<li>Column: TotalBiscuitsMade (Table: Fact)</li>
</ul></li>
</ul></li>
<li><span class="caret">Measure: Availability (Table: Key Measure)</span>
<ul class="nested">
<li><span class="caret">Measure: Total Duration (Table: Key Measure)</span>
<ul class="nested">
<li>Table: Fact</li>
<li>Column: Duration (Table: Fact)</li>
</ul></li>
<li><span class="caret">Measure: No Order (Table: Key Measure)</span>
<ul class="nested">
<li>Table: Fact</li>
<li>Column: OEE Category (Table: Fact)</li>
<li><span class="caret">Measure: Total Duration (Table: Key Measure)</span>
<ul class="nested">
<li>Table: Fact</li>
<li>Column: Duration (Table: Fact)</li>
</ul></li>
</ul></li>
</ul></li>
<li><span class="caret">Measure: Performance (Table: Key Measure)</span>
<ul class="nested">
<li><span class="caret">Measure: Total Biscuit (Table: Key Measure)</span>
<ul class="nested">
<li>Table: Fact</li>
<li>Column: TotalBiscuitsMade (Table: Fact)</li>
</ul></li>
<li><span class="caret">Measure: No Order Total (Table: Key Measure)</span>
<ul class="nested">
<li>Table: Fact</li>
<li>Column: OEE Category (Table: Fact)</li>
<li><span class="caret">Measure: Total Biscuit (Table: Key Measure)</span>
<ul class="nested">
<li>Table: Fact</li>
<li>Column: TotalBiscuitsMade (Table: Fact)</li>
</ul></li>
</ul></li>
</ul></li>
</ul></span></li>
</ul></td>
		<td>Measure: OEE</td>
	</tr>
	<tr>
		<td>% Good</td>
		<td>Key Measure</td>
		<td></td>
		<td><pre>DIVIDE([Good Biscuit],[Total Biscuit],0)</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: % Good</span><span class="dropDownCaret">
<ul class="nested">
<li><span class="caret">Measure: Good Biscuit (Table: Key Measure)</span>
<ul class="nested">
<li>Table: Fact</li>
<li>Column: Good Made Biscuits (Table: Fact)</li>
</ul></li>
<li><span class="caret">Measure: Total Biscuit (Table: Key Measure)</span>
<ul class="nested">
<li>Table: Fact</li>
<li>Column: TotalBiscuitsMade (Table: Fact)</li>
</ul></li>
</ul></span></li>
</ul></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: % Good</span><span class="dropDownCaret">
<ul class="nested">
<li>Measure: #%Good</li>
</ul></span></li>
</ul></td>
	</tr>
	<tr>
		<td>#%Good</td>
		<td>Key Measure</td>
		<td></td>
		<td><pre>1 - [% Good]</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: #%Good</span><span class="dropDownCaret">
<ul class="nested">
<li><span class="caret">Measure: % Good (Table: Key Measure)</span>
<ul class="nested">
<li><span class="caret">Measure: Good Biscuit (Table: Key Measure)</span>
<ul class="nested">
<li>Table: Fact</li>
<li>Column: Good Made Biscuits (Table: Fact)</li>
</ul></li>
<li><span class="caret">Measure: Total Biscuit (Table: Key Measure)</span>
<ul class="nested">
<li>Table: Fact</li>
<li>Column: TotalBiscuitsMade (Table: Fact)</li>
</ul></li>
</ul></li>
</ul></span></li>
</ul></td>
		<td>Measure: #%Good</td>
	</tr>
</table>
<hr></hr><br></br><h3><div>List of Columns for Table Fact:</div></h3><br></br><table border="1" cellpadding="3">
	<tr>
		<th>Column Name</th>
		<th>Description</th>
		<th>Calculated Column</th>
		<th>Expression</th>
	</tr>
	<tr>
		<td>Machine</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>StartDateTime</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>EndDateTime</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Duration</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>TotalBiscuitsMade</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Good Made Biscuits</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>BadMadeBiscuits</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Product</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>OEE</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>OEE Category</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
</table>
<hr></hr><br></br><h3><div>List of Columns for Table Machine:</div></h3><br></br><table border="1" cellpadding="3">
	<tr>
		<th>Column Name</th>
		<th>Description</th>
		<th>Calculated Column</th>
		<th>Expression</th>
	</tr>
	<tr>
		<td>Machine Name</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Machine Type</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
</table>
<hr></hr><br></br><h3><div>List of Columns for Table Product:</div></h3><br></br><table border="1" cellpadding="3">
	<tr>
		<th>Column Name</th>
		<th>Description</th>
		<th>Calculated Column</th>
		<th>Expression</th>
	</tr>
	<tr>
		<td>Product Name</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Bsicuits Per Pallet</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Biscuits_PER_PACK</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Biscuits_PER_CASE</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Biscuits_PER_PALLET</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
</table>
<hr></hr><br></br><h3><div>List of Columns for Table Target Speeds:</div></h3><br></br><table border="1" cellpadding="3">
	<tr>
		<th>Column Name</th>
		<th>Description</th>
		<th>Calculated Column</th>
		<th>Expression</th>
	</tr>
	<tr>
		<td>Machine</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Product</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>TARGET_Biscuits_per_hour</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Duration Total</td>
		<td></td>
		<td>Calculated Column</td>
		<td>[Total Duration]</td>
	</tr>
</table>
<hr></hr><br></br><h3><div>List of Columns for Table Key Measure:</div></h3><br></br><table border="1" cellpadding="3">
	<tr>
		<th>Column Name</th>
		<th>Description</th>
		<th>Calculated Column</th>
		<th>Expression</th>
	</tr>
</table>
<hr></hr><br></br><h3><div>List of Columns for Table Dates:</div></h3><br></br><table border="1" cellpadding="3">
	<tr>
		<th>Column Name</th>
		<th>Description</th>
		<th>Calculated Column</th>
		<th>Expression</th>
	</tr>
	<tr>
		<td>Date</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Year</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>QuarterOfYear</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>MonthOfYear</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>DayOfMonth</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>DateInt</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>MonthName</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>MonthInCalendar</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>QuarterInCalendar</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>DayInWeek</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>DayOfWeekName</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>WeekEnding</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Week Number</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>MonthnYear</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>QuarternYear</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>ShortYear</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>FY</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
</table>
<hr></hr><br></br><h3><div>List of Roles:</div></h3><br></br><table border="1" cellpadding="3">
	<tr>
		<th>Role Name</th>
		<th>Table Name</th>
		<th>Description</th>
		<th>Expression</th>
	</tr>
</table>
<hr></hr><br></br><h3><div>Relationships:</div></h3><br></br><table border='1px' cellpadding='1' cellspacing='1'><tr ><td >Name</td><td >CrossFilteringBehavior</td><td >FromCardinality</td><td >FromColumn</td><td >FromTable</td><td >IsActive</td><td >IsRemoved</td><td >JoinOnDateBehavior</td><td >RelyOnReferentialIntegrity</td><td >SecurityFilteringBehavior</td><td >State</td><td >ToCardinality</td><td >ToColumn</td><td >ToTable</td><td >Type</td></tr><tr ><td >4da5f99c-193e-486c-95a8-900fbc103d49</td><td >OneDirection</td><td >Many</td><td >Machine</td><td >Fact</td><td >True</td><td >False</td><td >DateAndTime</td><td >False</td><td >OneDirection</td><td >Ready</td><td >One</td><td >Machine Name</td><td >Machine</td><td >SingleColumn</td></tr><tr ><td >d500a530-5277-44af-bf95-eb20c900f7f4</td><td >OneDirection</td><td >Many</td><td >Machine</td><td >Target Speeds</td><td >True</td><td >False</td><td >DateAndTime</td><td >False</td><td >OneDirection</td><td >Ready</td><td >One</td><td >Machine Name</td><td >Machine</td><td >SingleColumn</td></tr><tr ><td >75245729-d8f3-4651-a734-5c04e487f6ad</td><td >OneDirection</td><td >Many</td><td >Product</td><td >Fact</td><td >True</td><td >False</td><td >DateAndTime</td><td >False</td><td >OneDirection</td><td >Ready</td><td >One</td><td >Product Name</td><td >Product</td><td >SingleColumn</td></tr><tr ><td >74406c7a-92a8-48b5-a4be-d81e36fc395b</td><td >OneDirection</td><td >Many</td><td >Product</td><td >Target Speeds</td><td >True</td><td >False</td><td >DateAndTime</td><td >False</td><td >OneDirection</td><td >Ready</td><td >One</td><td >Product Name</td><td >Product</td><td >SingleColumn</td></tr><tr ><td >1249ed8e-01aa-4212-8676-bd5cefe7c062</td><td >OneDirection</td><td >Many</td><td >Date</td><td >Dates</td><td >True</td><td >False</td><td >DatePartOnly</td><td >False</td><td >OneDirection</td><td >Ready</td><td >One</td><td >Date</td><td >LocalDateTable_04ac333c-cc98-4e17-bcdd-d730817b43c1</td><td >SingleColumn</td></tr><tr ><td >7533f5c0-0076-431c-91cf-655137ab9440</td><td >OneDirection</td><td >Many</td><td >WeekEnding</td><td >Dates</td><td >True</td><td >False</td><td >DatePartOnly</td><td >False</td><td >OneDirection</td><td >Ready</td><td >One</td><td >Date</td><td >LocalDateTable_b194ffe4-4f59-4869-bd56-ae42207e5df3</td><td >SingleColumn</td></tr><tr ><td >472465d3-1553-42a9-98bd-f5b21a4fd9c8</td><td >OneDirection</td><td >Many</td><td >StartDateTime</td><td >Fact</td><td >True</td><td >False</td><td >DateAndTime</td><td >False</td><td >OneDirection</td><td >Ready</td><td >One</td><td >Date</td><td >Dates</td><td >SingleColumn</td></tr><tr ><td >f5293bb3-f75f-4776-914d-fca9f43ddd19</td><td >OneDirection</td><td >Many</td><td >EndDateTime</td><td >Fact</td><td >True</td><td >False</td><td >DatePartOnly</td><td >False</td><td >OneDirection</td><td >Ready</td><td >One</td><td >Date</td><td >LocalDateTable_3ebec2a4-7376-4e00-b4a6-5be7217115ab</td><td >SingleColumn</td></tr></table><hr></hr><br></br><h2><div>M (Power Query) Script:</div></h2><br></br><br></br><font face="verdana" size="2"<div>Fact-a212dfc9-8c8f-4ae0-857f-a6e6be7b0a5d<br></br><br></br><font color="blue">let</font><br></br>    Source = <font color="purple">Excel.Workbook</font>(<font color="purple">File.Contents</font>(<font color="red">"D:\EDNA Files\Challenge 18\Challenge 18.xlsx"</font>), <font color="blue">null</font>, <font color="blue">true</font>),<br></br>    Fact_Sheet = Source{[Item=<font color="red">"Fact"</font>,Kind=<font color="red">"Sheet"</font>]}[Data],<br></br>    #<font color="red">"Promoted Headers"</font> = <font color="purple">Table.PromoteHeaders</font>(Fact_Sheet, [PromoteAllScalars=<font color="blue">true</font>]),<br></br>    #<font color="red">"Changed Type"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Promoted Headers"</font>,{{<font color="red">"Machine"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"StartDateTime"</font>, <font color="blue">type</font> datetime}, {<font color="red">"EndDateTime"</font>, <font color="blue">type</font> datetime}, {<font color="red">"Duration"</font>, <font color="blue">type</font> number}, {<font color="red">"TotalBiscuitsMade"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"GoodMadeBiscuits"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"BadMadeBiscuits"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"OEE Category"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Product"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"StartDateTime_1"</font>, <font color="blue">type</font> datetime}}),<br></br>    #<font color="red">"Split Column by Delimiter"</font> = <font color="purple">Table.Split</font>Column(<font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Changed Type"</font>, {{<font color="red">"StartDateTime_1"</font>, <font color="blue">type</font> <font color="blue">text</font>}}, "en-US"), <font color="red">"StartDateTime_1"</font>, <font color="purple">Splitter.SplitTextByEachDelimiter</font>({<font color="red">" "</font>}, <font color="purple">QuoteStyle.Csv</font>, false), {<font color="red">"StartDateTime_1.1"</font>, <font color="red">"StartDateTime_1.2"</font>}),<br></br>    #<font color="red">"Changed Type1"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Split Column by Delimiter"</font>,{{<font color="red">"StartDateTime_1.1"</font>, <font color="blue">type</font> <font color="blue">date</font>}, {<font color="red">"StartDateTime_1.2"</font>, <font color="blue">type</font> <font color="blue">time</font>}}),<br></br>    #<font color="red">"Removed Columns"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Changed Type1"</font>,{<font color="red">"StartDateTime_1.2"</font>, <font color="red">"StartDateTime_1.1"</font>}),<br></br>    #<font color="red">"Added Custom"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Removed Columns"</font>, <font color="red">"Custom"</font>, each [EndDateTime] - [StartDateTime]),<br></br>    #<font color="red">"Reordered Columns"</font> = <font color="purple">Table.ReorderColumns</font>(#<font color="red">"Added Custom"</font>,{<font color="red">"Machine"</font>, <font color="red">"StartDateTime"</font>, <font color="red">"EndDateTime"</font>, <font color="red">"Duration"</font>, <font color="red">"Custom"</font>, <font color="red">"TotalBiscuitsMade"</font>, <font color="red">"GoodMadeBiscuits"</font>, <font color="red">"BadMadeBiscuits"</font>, <font color="red">"OEE Category"</font>, <font color="red">"Product"</font>}),<br></br>    #<font color="red">"Changed Type2"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Reordered Columns"</font>,{{<font color="red">"Custom"</font>, <font color="blue">type</font> duration}}),<br></br>    #<font color="red">"Renamed Columns"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Changed Type2"</font>,{{<font color="red">"Custom"</font>, <font color="red">"Time Diff"</font>}}),<br></br>    #<font color="red">"Removed Columns1"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Renamed Columns"</font>,{<font color="red">"Time Diff"</font>}),<br></br>    #<font color="red">"Split Column by Delimiter1"</font> = <font color="purple">Table.Split</font>Column(#<font color="red">"Removed Columns1"</font>, <font color="red">"OEE Category"</font>, <font color="purple">Splitter.SplitTextByEachDelimiter</font>({<font color="red">" "</font>}, <font color="purple">QuoteStyle.Csv</font>, false), {<font color="red">"OEE Category.1"</font>, <font color="red">"OEE Category.2"</font>}),<br></br>    #<font color="red">"Changed Type3"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Split Column by Delimiter1"</font>,{{<font color="red">"OEE Category.1"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"OEE Category.2"</font>, <font color="blue">type</font> <font color="blue">text</font>}}),<br></br>    #<font color="red">"Replaced Value"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Changed Type3"</font>,"(<font color="red">","</font>",<font color="purple">Replacer.ReplaceText</font>,{<font color="red">"OEE Category.2"</font>}),<br></br>    #<font color="red">"Replaced Value1"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Replaced Value"</font>,")<font color="red">","</font>",<font color="purple">Replacer.ReplaceText</font>,{<font color="red">"OEE Category.2"</font>}),<br></br>    #<font color="red">"Renamed Columns1"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Replaced Value1"</font>,{{<font color="red">"OEE Category.1"</font>, <font color="red">"OEE Category Short"</font>}, {<font color="red">"OEE Category.2"</font>, <font color="red">"OEE Category"</font>}, {<font color="red">"Duration"</font>, <font color="red">"Duration1"</font>}}),<br></br>    #<font color="red">"Replaced Value2"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Renamed Columns1"</font>,<font color="red">"Time"</font>,<font color="red">"Run Time"</font>,<font color="purple">Replacer.ReplaceText</font>,{<font color="red">"OEE Category"</font>}),<br></br>    #<font color="red">"Filtered Rows"</font> = <font color="purple">Table.SelectRows</font>(#<font color="red">"Replaced Value2"</font>, each <font color="blue">true</font>),<br></br>    #<font color="red">"Renamed Columns2"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Filtered Rows"</font>,{{<font color="red">"Duration1"</font>, <font color="red">"Duration"</font>}}),<br></br>    #<font color="red">"Changed Type4"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Renamed Columns2"</font>,{{<font color="red">"StartDateTime"</font>, <font color="blue">type</font> <font color="blue">date</font>}, {<font color="red">"EndDateTime"</font>, <font color="blue">type</font> <font color="blue">date</font>}}),<br></br>    #<font color="red">"Renamed Columns3"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Changed Type4"</font>,{{<font color="red">"OEE Category Short"</font>, <font color="red">"OEE"</font>}, {<font color="red">"GoodMadeBiscuits"</font>, <font color="red">"Good Made Biscuits"</font>}})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Renamed Columns3"</font><br></br><br></br><br></br>----------------------<br></br>DateTableTemplate_93942472-1d72-4e3f-9dc2-4f12021ba95f-db84ce34-4640-4231-83e0-393c0c1ba448<br></br><br></br>Calendar(Date(2015,1,1), Date(2015,1,1))<br></br><br></br><br></br>----------------------<br></br>Machine-e8432fa4-30bc-4a0f-917b-687461cf3861<br></br><br></br><font color="blue">let</font><br></br>    Source = <font color="purple">Excel.Workbook</font>(<font color="purple">File.Contents</font>(<font color="red">"D:\EDNA Files\Challenge 18\Challenge 18.xlsx"</font>), <font color="blue">null</font>, <font color="blue">true</font>),<br></br>    Machine_Sheet = Source{[Item=<font color="red">"Machine"</font>,Kind=<font color="red">"Sheet"</font>]}[Data],<br></br>    #<font color="red">"Changed Type"</font> = <font color="purple">Table.TransformColumnTypes</font>(Machine_Sheet,{{<font color="red">"Column1"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column2"</font>, <font color="blue">type</font> <font color="blue">text</font>}}),<br></br>    #<font color="red">"Promoted Headers"</font> = <font color="purple">Table.PromoteHeaders</font>(#<font color="red">"Changed Type"</font>, [PromoteAllScalars=<font color="blue">true</font>]),<br></br>    #<font color="red">"Changed Type1"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Promoted Headers"</font>,{{<font color="red">"Machine Name"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Machine Type"</font>, <font color="blue">type</font> <font color="blue">text</font>}})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Changed Type1"</font><br></br><br></br><br></br>----------------------<br></br>Product-e53970ae-e799-4ec8-b004-2f739252ae2e<br></br><br></br><font color="blue">let</font><br></br>    Source = <font color="purple">Excel.Workbook</font>(<font color="purple">File.Contents</font>(<font color="red">"D:\EDNA Files\Challenge 18\Challenge 18.xlsx"</font>), <font color="blue">null</font>, <font color="blue">true</font>),<br></br>    Product_Sheet = Source{[Item=<font color="red">"Product"</font>,Kind=<font color="red">"Sheet"</font>]}[Data],<br></br>    #<font color="red">"Promoted Headers"</font> = <font color="purple">Table.PromoteHeaders</font>(Product_Sheet, [PromoteAllScalars=<font color="blue">true</font>]),<br></br>    #<font color="red">"Changed Type"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Promoted Headers"</font>,{{<font color="red">"Product Name"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Bsicuits Per Pallet"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Biscuits_PER_PACK"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Biscuits_PER_CASE"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Biscuits_PER_PALLET"</font>, <font color="purple">Int64.Type</font>}})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Changed Type"</font><br></br><br></br><br></br>----------------------<br></br>Target Speeds-636a3a0d-b7ac-4479-885d-4077a4b5ed43<br></br><br></br><font color="blue">let</font><br></br>    Source = <font color="purple">Excel.Workbook</font>(<font color="purple">File.Contents</font>(<font color="red">"D:\EDNA Files\Challenge 18\Challenge 18.xlsx"</font>), <font color="blue">null</font>, <font color="blue">true</font>),<br></br>    #<font color="red">"Target Speeds_Sheet"</font> = Source{[Item=<font color="red">"Target Speeds"</font>,Kind=<font color="red">"Sheet"</font>]}[Data],<br></br>    #<font color="red">"Promoted Headers"</font> = <font color="purple">Table.PromoteHeaders</font>(#<font color="red">"Target Speeds_Sheet"</font>, [PromoteAllScalars=<font color="blue">true</font>]),<br></br>    #<font color="red">"Changed Type"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Promoted Headers"</font>,{{<font color="red">"Machine"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Product"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"TARGET_Biscuits_per_hour"</font>, <font color="purple">Int64.Type</font>}})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Changed Type"</font><br></br><br></br><br></br>----------------------<br></br>Key Measure-8081cf0d-7fc5-4718-8632-b3ce494dcbd0<br></br><br></br><font color="blue">let</font><br></br>    Source = <font color="purple">Table.FromRows</font>(<font color="purple">Json.Document</font>(<font color="purple">Binary.Decompress</font>(<font color="purple">Binary.From</font>Text("i44FAA==", <font color="purple">BinaryEncoding.Base64</font>), <font color="purple">Compression.Deflate</font>)), <font color="blue">let</font> _t = ((<font color="blue">type</font> nullable <font color="blue">text</font>) meta [Serialized.Text = <font color="blue">true</font>]) <font color="blue">in</font> <font color="blue">type</font> table [Column1 = _t]),<br></br>    #<font color="red">"Changed Type"</font> = <font color="purple">Table.TransformColumnTypes</font>(Source,{{<font color="red">"Column1"</font>, <font color="blue">type</font> <font color="blue">text</font>}}),<br></br>    #<font color="red">"Removed Columns"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Changed Type"</font>,{<font color="red">"Column1"</font>})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Removed Columns"</font><br></br><br></br><br></br>----------------------<br></br>Dates-bca4a15c-5773-4d24-b995-bd156ffc1da2<br></br><br></br><font color="blue">let</font><br></br>    Source = <font color="purple">Query1</font>(#<font color="blue">date</font>(2021, 7, 1), #<font color="blue">date</font>(2021, 7, 31), 1)<br></br><font color="blue">in</font><br></br>    Source<br></br><br></br><br></br>----------------------<br></br>LocalDateTable_04ac333c-cc98-4e17-bcdd-d730817b43c1-63d1a30b-2acc-46a8-914e-b741ab282b03<br></br><br></br>Calendar(Date(Year(MIN('Dates'[Date])), 1, 1), Date(Year(MAX('Dates'[Date])), 12, 31))<br></br><br></br><br></br>----------------------<br></br>LocalDateTable_b194ffe4-4f59-4869-bd56-ae42207e5df3-73a5292c-4dab-4c1a-bea9-8c018a0381c4<br></br><br></br>Calendar(Date(Year(MIN('Dates'[WeekEnding])), 1, 1), Date(Year(MAX('Dates'[WeekEnding])), 12, 31))<br></br><br></br><br></br>----------------------<br></br>LocalDateTable_3ebec2a4-7376-4e00-b4a6-5be7217115ab-96ed6acd-d309-4f1c-85bd-ad9d0de0c6e1<br></br><br></br>Calendar(Date(Year(MIN('Fact'[EndDateTime])), 1, 1), Date(Year(MAX('Fact'[EndDateTime])), 12, 31))<br></br><br></br><br></br>----------------------<br></br></font></div><br></br><hr></hr><br></br><h3><div>Partitions:</div></h3><br></br><table border='1px' cellpadding='1' cellspacing='1'><tr ><td >Name</td><td >QueryDefinition</td></tr><tr ><td >Fact-a212dfc9-8c8f-4ae0-857f-a6e6be7b0a5d</td><td ><font color="blue">let</font><br></br>    Source = <font color="purple">Excel.Workbook</font>(<font color="purple">File.Contents</font>(<font color="red">"D:\EDNA Files\Challenge 18\Challenge 18.xlsx"</font>), <font color="blue">null</font>, <font color="blue">true</font>),<br></br>    Fact_Sheet = Source{[Item=<font color="red">"Fact"</font>,Kind=<font color="red">"Sheet"</font>]}[Data],<br></br>    #<font color="red">"Promoted Headers"</font> = <font color="purple">Table.PromoteHeaders</font>(Fact_Sheet, [PromoteAllScalars=<font color="blue">true</font>]),<br></br>    #<font color="red">"Changed Type"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Promoted Headers"</font>,{{<font color="red">"Machine"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"StartDateTime"</font>, <font color="blue">type</font> datetime}, {<font color="red">"EndDateTime"</font>, <font color="blue">type</font> datetime}, {<font color="red">"Duration"</font>, <font color="blue">type</font> number}, {<font color="red">"TotalBiscuitsMade"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"GoodMadeBiscuits"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"BadMadeBiscuits"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"OEE Category"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Product"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"StartDateTime_1"</font>, <font color="blue">type</font> datetime}}),<br></br>    #<font color="red">"Split Column by Delimiter"</font> = <font color="purple">Table.Split</font>Column(<font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Changed Type"</font>, {{<font color="red">"StartDateTime_1"</font>, <font color="blue">type</font> <font color="blue">text</font>}}, "en-US"), <font color="red">"StartDateTime_1"</font>, <font color="purple">Splitter.SplitTextByEachDelimiter</font>({<font color="red">" "</font>}, <font color="purple">QuoteStyle.Csv</font>, false), {<font color="red">"StartDateTime_1.1"</font>, <font color="red">"StartDateTime_1.2"</font>}),<br></br>    #<font color="red">"Changed Type1"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Split Column by Delimiter"</font>,{{<font color="red">"StartDateTime_1.1"</font>, <font color="blue">type</font> <font color="blue">date</font>}, {<font color="red">"StartDateTime_1.2"</font>, <font color="blue">type</font> <font color="blue">time</font>}}),<br></br>    #<font color="red">"Removed Columns"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Changed Type1"</font>,{<font color="red">"StartDateTime_1.2"</font>, <font color="red">"StartDateTime_1.1"</font>}),<br></br>    #<font color="red">"Added Custom"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Removed Columns"</font>, <font color="red">"Custom"</font>, each [EndDateTime] - [StartDateTime]),<br></br>    #<font color="red">"Reordered Columns"</font> = <font color="purple">Table.ReorderColumns</font>(#<font color="red">"Added Custom"</font>,{<font color="red">"Machine"</font>, <font color="red">"StartDateTime"</font>, <font color="red">"EndDateTime"</font>, <font color="red">"Duration"</font>, <font color="red">"Custom"</font>, <font color="red">"TotalBiscuitsMade"</font>, <font color="red">"GoodMadeBiscuits"</font>, <font color="red">"BadMadeBiscuits"</font>, <font color="red">"OEE Category"</font>, <font color="red">"Product"</font>}),<br></br>    #<font color="red">"Changed Type2"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Reordered Columns"</font>,{{<font color="red">"Custom"</font>, <font color="blue">type</font> duration}}),<br></br>    #<font color="red">"Renamed Columns"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Changed Type2"</font>,{{<font color="red">"Custom"</font>, <font color="red">"Time Diff"</font>}}),<br></br>    #<font color="red">"Removed Columns1"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Renamed Columns"</font>,{<font color="red">"Time Diff"</font>}),<br></br>    #<font color="red">"Split Column by Delimiter1"</font> = <font color="purple">Table.Split</font>Column(#<font color="red">"Removed Columns1"</font>, <font color="red">"OEE Category"</font>, <font color="purple">Splitter.SplitTextByEachDelimiter</font>({<font color="red">" "</font>}, <font color="purple">QuoteStyle.Csv</font>, false), {<font color="red">"OEE Category.1"</font>, <font color="red">"OEE Category.2"</font>}),<br></br>    #<font color="red">"Changed Type3"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Split Column by Delimiter1"</font>,{{<font color="red">"OEE Category.1"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"OEE Category.2"</font>, <font color="blue">type</font> <font color="blue">text</font>}}),<br></br>    #<font color="red">"Replaced Value"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Changed Type3"</font>,"(<font color="red">","</font>",<font color="purple">Replacer.ReplaceText</font>,{<font color="red">"OEE Category.2"</font>}),<br></br>    #<font color="red">"Replaced Value1"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Replaced Value"</font>,")<font color="red">","</font>",<font color="purple">Replacer.ReplaceText</font>,{<font color="red">"OEE Category.2"</font>}),<br></br>    #<font color="red">"Renamed Columns1"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Replaced Value1"</font>,{{<font color="red">"OEE Category.1"</font>, <font color="red">"OEE Category Short"</font>}, {<font color="red">"OEE Category.2"</font>, <font color="red">"OEE Category"</font>}, {<font color="red">"Duration"</font>, <font color="red">"Duration1"</font>}}),<br></br>    #<font color="red">"Replaced Value2"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Renamed Columns1"</font>,<font color="red">"Time"</font>,<font color="red">"Run Time"</font>,<font color="purple">Replacer.ReplaceText</font>,{<font color="red">"OEE Category"</font>}),<br></br>    #<font color="red">"Filtered Rows"</font> = <font color="purple">Table.SelectRows</font>(#<font color="red">"Replaced Value2"</font>, each <font color="blue">true</font>),<br></br>    #<font color="red">"Renamed Columns2"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Filtered Rows"</font>,{{<font color="red">"Duration1"</font>, <font color="red">"Duration"</font>}}),<br></br>    #<font color="red">"Changed Type4"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Renamed Columns2"</font>,{{<font color="red">"StartDateTime"</font>, <font color="blue">type</font> <font color="blue">date</font>}, {<font color="red">"EndDateTime"</font>, <font color="blue">type</font> <font color="blue">date</font>}}),<br></br>    #<font color="red">"Renamed Columns3"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Changed Type4"</font>,{{<font color="red">"OEE Category Short"</font>, <font color="red">"OEE"</font>}, {<font color="red">"GoodMadeBiscuits"</font>, <font color="red">"Good Made Biscuits"</font>}})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Renamed Columns3"</font></td></tr><tr ><td >DateTableTemplate_93942472-1d72-4e3f-9dc2-4f12021ba95f-db84ce34-4640-4231-83e0-393c0c1ba448</td><td >Calendar(Date(2015,1,1), Date(2015,1,1))</td></tr><tr ><td >Machine-e8432fa4-30bc-4a0f-917b-687461cf3861</td><td ><font color="blue">let</font><br></br>    Source = <font color="purple">Excel.Workbook</font>(<font color="purple">File.Contents</font>(<font color="red">"D:\EDNA Files\Challenge 18\Challenge 18.xlsx"</font>), <font color="blue">null</font>, <font color="blue">true</font>),<br></br>    Machine_Sheet = Source{[Item=<font color="red">"Machine"</font>,Kind=<font color="red">"Sheet"</font>]}[Data],<br></br>    #<font color="red">"Changed Type"</font> = <font color="purple">Table.TransformColumnTypes</font>(Machine_Sheet,{{<font color="red">"Column1"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column2"</font>, <font color="blue">type</font> <font color="blue">text</font>}}),<br></br>    #<font color="red">"Promoted Headers"</font> = <font color="purple">Table.PromoteHeaders</font>(#<font color="red">"Changed Type"</font>, [PromoteAllScalars=<font color="blue">true</font>]),<br></br>    #<font color="red">"Changed Type1"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Promoted Headers"</font>,{{<font color="red">"Machine Name"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Machine Type"</font>, <font color="blue">type</font> <font color="blue">text</font>}})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Changed Type1"</font></td></tr><tr ><td >Product-e53970ae-e799-4ec8-b004-2f739252ae2e</td><td ><font color="blue">let</font><br></br>    Source = <font color="purple">Excel.Workbook</font>(<font color="purple">File.Contents</font>(<font color="red">"D:\EDNA Files\Challenge 18\Challenge 18.xlsx"</font>), <font color="blue">null</font>, <font color="blue">true</font>),<br></br>    Product_Sheet = Source{[Item=<font color="red">"Product"</font>,Kind=<font color="red">"Sheet"</font>]}[Data],<br></br>    #<font color="red">"Promoted Headers"</font> = <font color="purple">Table.PromoteHeaders</font>(Product_Sheet, [PromoteAllScalars=<font color="blue">true</font>]),<br></br>    #<font color="red">"Changed Type"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Promoted Headers"</font>,{{<font color="red">"Product Name"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Bsicuits Per Pallet"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Biscuits_PER_PACK"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Biscuits_PER_CASE"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Biscuits_PER_PALLET"</font>, <font color="purple">Int64.Type</font>}})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Changed Type"</font></td></tr><tr ><td >Target Speeds-636a3a0d-b7ac-4479-885d-4077a4b5ed43</td><td ><font color="blue">let</font><br></br>    Source = <font color="purple">Excel.Workbook</font>(<font color="purple">File.Contents</font>(<font color="red">"D:\EDNA Files\Challenge 18\Challenge 18.xlsx"</font>), <font color="blue">null</font>, <font color="blue">true</font>),<br></br>    #<font color="red">"Target Speeds_Sheet"</font> = Source{[Item=<font color="red">"Target Speeds"</font>,Kind=<font color="red">"Sheet"</font>]}[Data],<br></br>    #<font color="red">"Promoted Headers"</font> = <font color="purple">Table.PromoteHeaders</font>(#<font color="red">"Target Speeds_Sheet"</font>, [PromoteAllScalars=<font color="blue">true</font>]),<br></br>    #<font color="red">"Changed Type"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Promoted Headers"</font>,{{<font color="red">"Machine"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Product"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"TARGET_Biscuits_per_hour"</font>, <font color="purple">Int64.Type</font>}})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Changed Type"</font></td></tr><tr ><td >Key Measure-8081cf0d-7fc5-4718-8632-b3ce494dcbd0</td><td ><font color="blue">let</font><br></br>    Source = <font color="purple">Table.FromRows</font>(<font color="purple">Json.Document</font>(<font color="purple">Binary.Decompress</font>(<font color="purple">Binary.From</font>Text("i44FAA==", <font color="purple">BinaryEncoding.Base64</font>), <font color="purple">Compression.Deflate</font>)), <font color="blue">let</font> _t = ((<font color="blue">type</font> nullable <font color="blue">text</font>) meta [Serialized.Text = <font color="blue">true</font>]) <font color="blue">in</font> <font color="blue">type</font> table [Column1 = _t]),<br></br>    #<font color="red">"Changed Type"</font> = <font color="purple">Table.TransformColumnTypes</font>(Source,{{<font color="red">"Column1"</font>, <font color="blue">type</font> <font color="blue">text</font>}}),<br></br>    #<font color="red">"Removed Columns"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Changed Type"</font>,{<font color="red">"Column1"</font>})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Removed Columns"</font></td></tr><tr ><td >Dates-bca4a15c-5773-4d24-b995-bd156ffc1da2</td><td ><font color="blue">let</font><br></br>    Source = <font color="purple">Query1</font>(#<font color="blue">date</font>(2021, 7, 1), #<font color="blue">date</font>(2021, 7, 31), 1)<br></br><font color="blue">in</font><br></br>    Source</td></tr><tr ><td >LocalDateTable_04ac333c-cc98-4e17-bcdd-d730817b43c1-63d1a30b-2acc-46a8-914e-b741ab282b03</td><td >Calendar(Date(Year(MIN('Dates'[Date])), 1, 1), Date(Year(MAX('Dates'[Date])), 12, 31))</td></tr><tr ><td >LocalDateTable_b194ffe4-4f59-4869-bd56-ae42207e5df3-73a5292c-4dab-4c1a-bea9-8c018a0381c4</td><td >Calendar(Date(Year(MIN('Dates'[WeekEnding])), 1, 1), Date(Year(MAX('Dates'[WeekEnding])), 12, 31))</td></tr><tr ><td >LocalDateTable_3ebec2a4-7376-4e00-b4a6-5be7217115ab-96ed6acd-d309-4f1c-85bd-ad9d0de0c6e1</td><td >Calendar(Date(Year(MIN('Fact'[EndDateTime])), 1, 1), Date(Year(MAX('Fact'[EndDateTime])), 12, 31))</td></tr></table><script>
	var toggler = document.getElementsByClassName("caret");
	for (var i = 0; i < toggler.length; i++){
		toggler[i].addEventListener("click", function() {
			this.parentElement.querySelector(".nested").classList.toggle("active");
		});
	}
		
	var togglerAll = document.getElementsByClassName("dropDownCaret");
	for (var j=0; j<togglerAll.length; j++){
		togglerAll[j].addEventListener("click", function(event){
			if (event.currentTarget != event.target) return;
			if(this.parentElement.querySelector(".nested").classList.contains("active")){
				this.querySelectorAll(".nested").forEach(function(currentValue, currentIndex, listObj) {
					if(currentValue.classList.contains("active")){
						currentValue.classList.remove("active");
					}
				});
			}
			else{
				this.querySelectorAll(".nested").forEach(function(currentValue, currentIndex, listObj) {
					if(!currentValue.classList.contains("active")){
						currentValue.classList.add("active");
					}
				});
			}
		});
	}
</script></body></html>